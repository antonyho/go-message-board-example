/*
 * Message Board
 *
 * This is an example server for message board.
 *
 * API version: 1.0.0
 * Contact: antony.h@riseup.net
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{ service: s }
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{ 
		{
			"EditMessage",
			strings.ToUpper("Put"),
			"/v1/message/{id}",
			c.EditMessage,
		},
		{
			"ListMessages",
			strings.ToUpper("Get"),
			"/v1/messages",
			c.ListMessages,
		},
		{
			"Login",
			strings.ToUpper("Post"),
			"/v1/login",
			c.Login,
		},
		{
			"PostMessage",
			strings.ToUpper("Post"),
			"/v1/message",
			c.PostMessage,
		},
		{
			"ViewMessage",
			strings.ToUpper("Get"),
			"/v1/message/{id}",
			c.ViewMessage,
		},
	}
}

// EditMessage - 
func (c *DefaultApiController) EditMessage(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	message := &Message{}
	if err := json.NewDecoder(r.Body).Decode(&message); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.EditMessage(id, *message)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ListMessages - 
func (c *DefaultApiController) ListMessages(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.ListMessages()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// Login - 
func (c *DefaultApiController) Login(w http.ResponseWriter, r *http.Request) { 
	credential := &Credential{}
	if err := json.NewDecoder(r.Body).Decode(&credential); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.Login(*credential)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PostMessage - 
func (c *DefaultApiController) PostMessage(w http.ResponseWriter, r *http.Request) { 
	message := &Message{}
	if err := json.NewDecoder(r.Body).Decode(&message); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PostMessage(*message)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ViewMessage - 
func (c *DefaultApiController) ViewMessage(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.ViewMessage(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
